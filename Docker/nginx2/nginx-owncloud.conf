server {
    # Escuchar en el puerto 80 para conexiones HTTP
    listen 80;
    listen [::]:80;  # Escuchar también en IPv6

    # Establecer la raíz del servidor y los archivos índice
    root /var/www/owncloud;
    index index.php index.html index.htm;

    # Configuración para la ubicación raíz
    location / {
        rewrite ^ /index.php$uri;  # Redirigir todas las solicitudes a index.php
        proxy_set_header Host $host;  # Establecer el encabezado Host con el valor del host solicitado
        proxy_set_header X-Real-IP $remote_addr;  # Pasar la IP real del cliente al backend
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Encabezado de IPs de clientes previos
        proxy_set_header X-Forwarded-Proto $scheme;  # Indicar si la solicitud original fue HTTP o HTTPS
    }

    # Bloquear el acceso a directorios sensibles o innecesarios
    location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
        return 404;  # Devuelve un error 404 si se intenta acceder a estos directorios
    }

    # Bloquear el acceso a archivos internos y scripts de administración
    location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console) {
        return 404;  # Devuelve un error 404 si se intenta acceder a estos archivos o directorios
    }

    # Configuración para manejar las solicitudes PHP específicas de OwnCloud
    location ~ ^/(?:index|remote|public|cron|core/ajax/update|status|ocs/v[12]|updater/.+|ocs-provider/.+|core/templates/40[34])\.php(?:$|/) {
         include snippets/fastcgi-php.conf;  # Incluir configuración de FastCGI para PHP
         fastcgi_pass 192.168.23.7:9000;  # Pasar la solicitud al servidor PHP-FPM en la IP y puerto indicados
         fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;  # Definir la ruta completa del script PHP
         include fastcgi_params;  # Incluir parámetros de FastCGI adicionales
         fastcgi_intercept_errors on;  # Interceptar errores de FastCGI para manejar los 404 y otros
         fastcgi_request_buffering off;  # Desactivar el almacenamiento en búfer de solicitudes
    }

    # Configuración para las rutas de actualización de OwnCloud
    location ~ ^/(?:updater|ocs-provider)(?:$|/) {
        try_files $uri $uri/ =404;  # Intentar acceder al archivo o directorio, devolver 404 si no existe
        index index.php;  # Usar index.php como archivo índice en esta ruta
    }

    # Configuración para archivos estáticos (CSS, JS)
    location ~* \.(?:css|js)$ {
        try_files $uri /index.php$uri$is_args$args;  # Si el archivo no existe, redirigir a index.php
        access_log off;  # Desactivar el registro de acceso para estos archivos
    }

    # Configuración para otros archivos estáticos (imágenes, fuentes, etc.)
    location ~* \.(?:svg|gif|png|html|ttf|woff|ico|jpg|jpeg)$ {
        try_files $uri /index.php$uri$is_args$args;  # Si el archivo no existe, redirigir a index.php
        access_log off;  # Desactivar el registro de acceso para estos archivos
    }
}
